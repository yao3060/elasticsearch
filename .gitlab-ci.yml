variables:
  GIT_STRATEGY: fetch
  GIT_DEPTH: 1

cache:
  key: ${CI_PROJECT_NAME}_3
  paths:
    - src/vendor
    - src/web/apidocs

include:
  - template: Code-Quality.gitlab-ci.yml

# runner is outdated, please upgrade your runner
stages:
  # - test
  - install
  - build-apidoc
  - build
  - deploy

before_script:
  - set -aeu
  # - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  - cp .env.default .env

after_script:
  - source .env
  - ./deploy/scripts/clean-docker-network.sh  "${PROJECT}_${ENVIRONMENT}_default"

###########################################################################

code_quality:
  stage: test
  artifacts:
    paths: [gl-code-quality-report.json]
  script:
    - echo "do code_quality test"

staging-install-job:
  stage: install
  environment:
    name: staging
  image: composer:2
  tags:
    - 818ps_web_dev
  only:
    - develop
  script:
    - cd ./src
    - echo "Start install php packages"
    - composer install --ignore-platform-reqs --no-scripts --no-dev
    # Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good for production.
    - composer dump-autoload -o
    - cd ../

staging-build-apidoc-job:
  stage: build-apidoc
  environment:
    name: staging
  image: yao3060/apidoc
  tags:
    - 818ps_web_dev
  only:
    - develop
  script:
    - echo "Start generate Apidoc"
    - rm -f apidoc
    - ls -la
    - apidoc -i src/controllers/ -o ./src/web/apidocs/

staging-build-job:
  stage: build
  environment:
    name: staging
  tags:
    - 818ps_web_dev
  only:
    - develop
  script:
    # - ./deploy/scripts/enable-docker-compose-network.sh
    - ./deploy/scripts/update-resource-mirror.sh
    - ./deploy/scripts/modify-dot-env-staging.sh
    - sed -i "1 s|$|-${CI_COMMIT_SHA:0:8}|" VERSION
    - source ./.env
    - export COMPOSE_PROJECT_NAME="${PROJECT}_${ENVIRONMENT}"
    - export VERSION=$(cat VERSION)
    - echo $VERSION
    - echo "ready to build and push to Aliyun CS"
    - ./deploy/scripts/deploy-to-aliyun-cs.sh nginx php
    - echo "built successfully"
  # when: manual

prod-install-job:
  stage: install
  environment:
    name: production
  image: composer:2
  tags:
    - 818ps_web_dev
  only:
    - master
  script:
    - cd ./src
    - echo "Start install php packages"
    - composer install --ignore-platform-reqs --no-dev --no-scripts
    - composer dump-autoload -o
    - cd ../

prod-build-job:
  stage: build
  environment:
    name: production
  tags:
    - 818ps_web_dev
  only:
    - master
  script:
    # - ./deploy/scripts/enable-docker-compose-network.sh
    - ./deploy/scripts/update-resource-mirror.sh
    - ./deploy/scripts/modify-dot-env-production.sh
    - sed -i "1 s|$|-${CI_COMMIT_SHA:0:8}|" VERSION
    - source ./.env
    - export COMPOSE_PROJECT_NAME="${PROJECT}_${ENVIRONMENT}"
    - export VERSION=$(cat VERSION)
    - echo $VERSION
    - echo "ready to build and push to Aliyun CS"
    - ./deploy/scripts/deploy-to-aliyun-cs.sh nginx php
    - echo "built successfully"
  when: manual
